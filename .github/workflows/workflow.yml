name: CI / Build / Publish

on:
  push:
    tags:
      - "v*"         # tag releases like v0.2.0 or v0.3.0rc1
  workflow_dispatch: {}  # allow manual runs

jobs:
  test:
    name: Test (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install package (dev)
        run: |
          python -m pip install -e .[dev]

      - name: Run tests
        run: |
          pytest -q

  build:
    name: Build sdist + wheel
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade build tools
        run: |
          python -m pip install --upgrade pip build

      - name: Build
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    name: Publish to TestPyPI (pre-releases)
    runs-on: ubuntu-latest
    needs: build
    if: |
      startsWith(github.ref, 'refs/tags/v') &&
      (contains(github.ref_name, 'rc') || contains(github.ref_name, 'a') || contains(github.ref_name, 'b'))
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install Twine
        run: python -m pip install --upgrade twine

      - name: Upload to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: twine upload --repository testpypi dist/*

  publish-pypi:
    name: Publish to PyPI (final releases)
    runs-on: ubuntu-latest
    needs: build
    if: |
      startsWith(github.ref, 'refs/tags/v') &&
      !contains(github.ref_name, 'rc') &&
      !contains(github.ref_name, 'a') &&
      !contains(github.ref_name, 'b')
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install Twine
        run: python -m pip install --upgrade twine

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
